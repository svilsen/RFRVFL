% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RVFL.R
\name{RVFL}
\alias{RVFL}
\alias{RVFL.default}
\alias{ELM}
\title{Random vector functional link}
\usage{
RVFL(X, y, N_hidden, lambda = 0, control = list())

\method{RVFL}{default}(X, y, N_hidden, lambda = 0, control = list())

ELM(X, y, N_hidden, lambda = 0, control = list())
}
\arguments{
\item{X}{A matrix of observed features used to train the parameters of the output layer.}

\item{y}{A vector of observed targets used to train the parameters of the output layer.}

\item{N_hidden}{A vector of integers designating the number of neurons in each of the hidden layers (the length of the list is taken as the number of hidden layers).}

\item{lambda}{The penalisation constant used when training the output layer.}

\item{control}{A list of additional arguments passed to the \link{control_RVFL} function.}
}
\value{
An \link{RVFL-object}.
}
\description{
Set-up and estimate weights of a random vector functional link neural network.
}
\details{
The function \code{ELM} is a wrapper for the general \code{RVFL} function without the link between features and targets. Furthermore, notice that \code{dRVFL} is handled by increasing the number of elements passed in \code{N_hidden}.
}
\examples{
N <- 200
p <- 5

X <- matrix(rnorm(N * p), ncol = p) 
beta <- matrix(runif(p), ncol = 1) 
y <- exp(X \%*\% beta) + rnorm(N)

N_hidden <- 100
ELM(X = X, y = y, N_hidden = N_hidden)
RVFL(X = X, y = y, N_hidden = N_hidden)

N_hidden <- c(10, 20, 10, 5)
RVFL(X = X, y = y, N_hidden = N_hidden)
N <- 200
p <- 5

X <- matrix(rnorm(N * p), ncol = p) 
beta <- matrix(runif(p), ncol = 1) 
y <- exp(X \%*\% beta) + rnorm(N)

N_hidden <- 100
ELM(X = X, y = y, N_hidden = N_hidden)
RVFL(X = X, y = y, N_hidden = N_hidden)

N_hidden <- c(10, 20, 10, 5)
RVFL(X = X, y = y, N_hidden = N_hidden)
}
