% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RVFL-package.R, R/RVFL.R
\docType{package}
\name{RVFL}
\alias{RVFL}
\alias{RVFL.default}
\title{RVFL: Random Vector Functional Link Neural Network Models}
\usage{
RVFL(X, y, N_hidden, lambda = 0, ...)

\method{RVFL}{default}(X, y, N_hidden, lambda = 0, ...)
}
\arguments{
\item{X}{A matrix of observed features used to train the parameters of the output layer.}

\item{y}{A vector of observed targets used to train the parameters of the output layer.}

\item{N_hidden}{A vector of integers designating the number of neurons in each of the hidden layers (the length of the list is taken as the number of hidden layers).}

\item{lambda}{The penalisation constant used when training the output layer.}

\item{...}{Additional arguments passed to the \link{control_RVFL} function.}
}
\value{
An RVFL-object containing the random and fitted weights of the RVFL-model. An RVFL-object contains the following:
\describe{
    \item{\code{data}}{The original data used to estimate the weights.}
    \item{\code{N_hidden}}{The vector of neurons in each layer.}
    \item{\code{activation}}{The vector of the activation functions used in each layer.}
    \item{\code{Bias}}{The \code{TRUE/FALSE} bias vectors set by the control function for both hidden layers, and the output layer.}
    \item{\code{Weights}}{The weigths of the neural network, split into random (stored in hidden) and estimated (stored in output) weights.}
    \item{\code{Sigma}}{The standard deviation of the corresponding linear model.}
    \item{\code{Combined}}{A \code{TRUE/FALSE} stating whether the direct links were made to the input.}
}
}
\description{
Creation, estimation, and prediction of random vector functional link neural networks (RVFL), including popular variants like extreme learning machines (ELM), sparse RVFL (spRVFL), and deep RVFL (dRVFL). It further allows for the creation of ensemble RVFLs like bagging RVFL (bagRVFL), boosting RVFL (boostRVFL), stacking RVFL (stackRVFL), and ensemble deep RVFL (edRVFL).

Set-up and estimate weights of a random vector functional link neural network.
}
\examples{
N <- 200
p <- 5

X <- matrix(rnorm(N * p), ncol = p) 
beta <- matrix(runif(p), ncol = 1) 
y <- exp(X \%*\% beta) + rnorm(p)

N_hidden <- 100
RVFL(X = X, y = y, N_hidden = N_hidden)

N_hidden <- c(10, 20, 10, 5)
RVFL(X = X, y = y, N_hidden = N_hidden)
}
\author{
SÃ¸ren B. Vilsen <svilsen@math.aau.dk>
}
