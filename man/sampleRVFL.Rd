% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampleRVFL.R
\name{sampleRVFL}
\alias{sampleRVFL}
\alias{sampleRVFL.default}
\title{Sampling random vector functional links}
\usage{
sampleRVFL(X, y, N_hidden, lambda = 1, control = list())

\method{sampleRVFL}{default}(X, y, N_hidden, lambda = 1, control = list())
}
\arguments{
\item{X}{A matrix of observed features used to estimate the parameters of the output layer.}

\item{y}{A vector of observed targets used to estimate the parameters of the output layer.}

\item{N_hidden}{A vector of integers designating the number of neurons in each of the hidden layers (the length of the list is taken as the number of hidden layers).}

\item{lambda}{The penalisation constant used when training the output layers of the RVFL.}

\item{control}{A list of additional arguments passed to the \link{control_sampleRVFL} function (includes arguments passed to the \link{control_RVFL} function.).}
}
\value{
The return object will depend on the choice of \code{method} passed through the \code{control} argument: 
\describe{
    \item{\code{"map"}}{An \link{RVFL-object}.}
    \item{\code{"stack"}}{An \link{ERVFL-object}.}
    \item{\code{"posterior"}}{An \link{SRVFL-object}.}
}
}
\description{
Uses sampling to pre-train sampling distribution of the hidden layers in random vector functional link neural network models.
}
\examples{
N <- 2000
p <- 5

s <- seq(0, pi, length.out = N)
X <- matrix(NA, ncol = p, nrow = N)
X[, 1] <- sin(s)
X[, 2] <- cos(s)
X[, 3] <- s
X[, 4] <- s^2
X[, 5] <- s^3

beta <- matrix(rnorm(p), ncol = 1) 
y <- X \%*\% beta + rnorm(N, 0, 1)

N_hidden <- 10

## Returning an RVFL object using just the MAP estimate of the weights
\dontrun{
sampleRVFL(X = X, y = y, N_hidden = N_hidden, control = list(method = "map"))
}

## Returning an ERVFL object resampling weights from the created posterior sample
\dontrun{
sampleRVFL(X = X, y = y, N_hidden = N_hidden, control = list(method = "stack"))
}

## Returning an SRVFL object of the sampled posterior
\dontrun{
sampleRVFL(X = X, y = y, N_hidden = N_hidden, control = list(method = "posterior"))
}
}
