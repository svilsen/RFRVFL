% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ERVFL.R
\name{edRVFL}
\alias{edRVFL}
\alias{edRVFL.default}
\title{Ensemble deep random vector functional links}
\usage{
edRVFL(X, y, N_hidden, lambda = 0, ...)

\method{edRVFL}{default}(X, y, N_hidden, lambda = 0, ...)
}
\arguments{
\item{X}{A matrix of observed features used to estimate the parameters of the output layer.}

\item{y}{A vector of observed targets used to estimate the parameters of the output layer.}

\item{N_hidden}{A vector of integers designating the number of neurons in each of the hidden layers (the length of the list is taken as the number of hidden layers).}

\item{lambda}{The penalisation constant used when training the output layers of each RVFL.}

\item{...}{Additional arguments passed to the \link{control_RVFL} function.}
}
\value{
An ERVFL-object containing the following:
\describe{
    \item{\code{data}}{The original data used to estimate the weights.}
    \item{\code{RVFLmodels}}{A list of \link{RVFL}-objects.}
    \item{\code{weights}}{A vector of ensemble weights.}
    \item{\code{method}}{A string indicating the method ('boosting' in this case)}
}
}
\description{
Use multiple layers to create deep ensemble random vector functional link neural network models.
}
\examples{
N <- 200
p <- 5

X <- matrix(rnorm(N * p), ncol = p) 
beta <- matrix(runif(p), ncol = 1) 
y <- X \%*\% beta + rnorm(p)

N_hidden <- rep(10, 15)
edRVFL(X = X, y = y, N_hidden = N_hidden, lambda = 0.2)
}
