% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stack_rwnn.R
\name{stack_rwnn}
\alias{stack_rwnn}
\alias{stack_rwnn.formula}
\title{Stacking random weight neural networks}
\usage{
stack_rwnn(
  formula,
  data = NULL,
  N_hidden = c(),
  lambda = NULL,
  B = 100,
  optimise = FALSE,
  folds = 10,
  method = NULL,
  type = NULL,
  control = list()
)

\method{stack_rwnn}{formula}(
  formula,
  data = NULL,
  N_hidden = c(),
  lambda = NULL,
  B = 100,
  optimise = FALSE,
  folds = 10,
  method = NULL,
  type = NULL,
  control = list()
)
}
\arguments{
\item{formula}{A \link{formula} specifying features and targets used to estimate the parameters of the output layer.}

\item{data}{A data-set (either a \link{data.frame} or a \link[tibble]{tibble}) used to estimate the parameters of the output layer.}

\item{N_hidden}{A vector of integers designating the number of neurons in each of the hidden layers (the length of the list is taken as the number of hidden layers).}

\item{lambda}{The penalisation constant used when training the output layers of each RWNN}

\item{B}{The number of models in the stack.}

\item{optimise}{TRUE/FALSE: Should the stacking weights be optimised (or should the stack just predict the average)?}

\item{folds}{The number of folds used to train the RWNN models.}

\item{method}{The penalisation type passed to \link{ae_rwnn}. Set to \code{NULL} (default), \code{"l1"}, or \code{"l2"}. If \code{NULL}, the \link{rwnn} is used as the base learner.}

\item{type}{A string indicating whether this is a regression or classification problem.}

\item{control}{A list of additional arguments passed to the \link{control_rwnn} function.}
}
\value{
An \link{ERWNN-object}.
}
\description{
Use stacking to create ensemble random weight neural networks.
}
\examples{
## Using the average of the stack to predict new targets
\dontrun{
stack_rwnn(y ~ ., data = example_data, N_hidden = N_hidden, 
           lambda = lambda, B = B)
}

## Using the optimised weighting of the stack to predict new targets
\dontrun{
stack_rwnn(y ~ ., data = example_data, N_hidden = N_hidden, 
           lambda = lambda, B = B, optimise = TRUE)
}

}
