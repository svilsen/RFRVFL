% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boostRVFL.R
\name{boostRVFL}
\alias{boostRVFL}
\alias{boostRVFL.default}
\title{Boosting random vector functional links}
\usage{
boostRVFL(X, y, N_hidden, B = 10, lambda = 0, epsilon = 1, control = list())

\method{boostRVFL}{default}(X, y, N_hidden, B = 10, lambda = 0, epsilon = 1, control = list())
}
\arguments{
\item{X}{A matrix of observed features used to estimate the parameters of the output layer.}

\item{y}{A vector of observed targets used to estimate the parameters of the output layer.}

\item{N_hidden}{A vector of integers designating the number of neurons in each of the hidden layers (the length of the list is taken as the number of hidden layers).}

\item{B}{The number of levels used in the boosting tree.}

\item{lambda}{The penalisation constant used when training the output layers of each RVFL.}

\item{epsilon}{The learning rate.}

\item{control}{A list of additional arguments passed to the \link{control_RVFL} function.}
}
\value{
An \link{ERVFL-object}.
}
\description{
Use gradient boosting to create ensemble random vector functional link neural network models.
}
\examples{
N <- 200
p <- 5

X <- matrix(rnorm(N * p), ncol = p) 
beta <- matrix(runif(p), ncol = 1) 
y <- X \%*\% beta + rnorm(N)

N_hidden <- 10
B <- 10
epsilon <- 0.2
boostRVFL(X = X, y = y, N_hidden = N_hidden, B = B, 
          lambda = 0.2, epsilon = epsilon)
}
