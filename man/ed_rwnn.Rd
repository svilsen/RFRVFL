% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ed_rwnn.R
\name{ed_rwnn}
\alias{ed_rwnn}
\alias{ed_rwnn.default}
\title{Ensemble deep random weight neural networks}
\usage{
ed_rwnn(X, y, N_hidden, lambda = 0, control = list())

\method{ed_rwnn}{default}(X, y, N_hidden, lambda = 0, control = list())
}
\arguments{
\item{X}{A matrix of observed features used to estimate the parameters of the output layer.}

\item{y}{A vector of observed targets used to estimate the parameters of the output layer.}

\item{N_hidden}{A vector of integers designating the number of neurons in each of the hidden layers (the length of the list is taken as the number of hidden layers).}

\item{lambda}{The penalisation constant used when training the output layers of each RWNN.}

\item{control}{A list of additional arguments passed to the \link{control_rwnn} function.}
}
\value{
An \link{ERWNN-object}.
}
\description{
Use multiple layers to create deep ensemble random weight neural network models.
}
\examples{
N <- 2000
p <- 5

s <- seq(0, pi, length.out = N)
X <- matrix(NA, ncol = p, nrow = N)
X[, 1] <- sin(s)
X[, 2] <- cos(s)
X[, 3] <- s
X[, 4] <- s^2
X[, 5] <- s^3

beta <- matrix(rnorm(p), ncol = 1) 
y <- X \%*\% beta + rnorm(N, 0, 1)

N_hidden <- rep(10, 15)
ed_rwnn(X = X, y = y, N_hidden = N_hidden, lambda = 0.2)
}
